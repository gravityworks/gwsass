/*
* Custom Mixins
*/

@mixin font-size($sizeValue: 1){
  font-size: ($sizeValue) + px;
  font-size: ($sizeValue / 10) + rem;
}
@mixin font-smoothing{
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
}
@mixin image-replace {
  display: block;
  text-indent: 200%;
  overflow: hidden;
  white-space: nowrap;
}
@mixin float-clear {
  &:after {
    clear: both;
    content: '';
    display: table;
  }
}
@mixin link-states {
  &:hover, &:focus, &:active { @content; }
}
@mixin no-first-last-margin {
  >*:first-child {
    margin-top: 0;
  }
  >*:last-child {
    margin-bottom: 0;
  } 
}
@mixin visually-hidden {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip-path: inset(1px 1px 1px 1px);
  white-space: nowrap;
}
@mixin centerer {
  position: absolute;
  top: 50%;
  left: 50%;
  @include translate(-50%, -50%);
}
@mixin has-dynamic-ratio($hight-to-width-percentage) {
  position: relative;
  padding-bottom: $hight-to-width-percentage;
  height: 0;
  .inner {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}
@mixin breakpoint($break, $type: min-width) {
  @if $type == min-width {
    @media (min-width: $break) { @content; }
  } @else {
    @media (#{$type}: $break) { @content; }
  }
}